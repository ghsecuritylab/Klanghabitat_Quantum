/*********************************************************************
*                SEGGER MICROCONTROLLER SYSTEME GmbH                 *
*        Solutions for real time microcontroller applications        *
**********************************************************************
*                                                                    *
*        (c) 1996 - 2004  SEGGER Microcontroller Systeme GmbH        *
*                                                                    *
*        Internet: www.segger.com    Support:  support@segger.com    *
*                                                                    *
**********************************************************************

***** emWin - Graphical user interface for embedded applications *****
emWin is protected by international copyright laws.   Knowledge of the
source code may not be used to write a similar product.  This file may
only be used in accordance with a license and should not be re-
distributed in any way. We appreciate your understanding and fairness.
----------------------------------------------------------------------
File        : BASIC_HelloWorld.c
Purpose     : Simple demo drawing "Hello world"
----------------------------------------------------------------------
*/

#include "GUI.h"

/*********************************************************************
*
*       Public code
*
**********************************************************************
*/
/*********************************************************************
*
*       MainTask
*/
int ringBuffer[800];
int lineStart = 0;
int lineEnd = 0;
int p = 0;
int k = 0;


void MainTask(void) {
  GUI_Clear();
  GUI_SetFont(&GUI_Font20_1);

  while(1){
	  	 k++;
	  ringBuffer[799] = k;
	  if(k>250){
		  k=0;
		  GUI_Clear();
	  }
/*
			  for(int i=0; i<800;i++){
		    ringBuffer[i] = ringBuffer[i+1];
		    }



		GUI_SetColor( GUI_ORANGE );

			for(int i=0; i<800;i++){
		        GUI_SetColor( GUI_BLACK );
		        GUI_DrawVLine(i,100, 400);
		        lineStart = 240 - (1*ringBuffer[i]/2);
		        lineEnd = lineStart + (1*ringBuffer[i]);
		        GUI_SetColor( GUI_ORANGE );
		        GUI_DrawVLine(i,lineStart, lineEnd);

			}
*/
	  GUI_SetColor( GUI_ORANGE );
			GUI_DrawGradientV(400, 240, 450+k,250, 0xFFFF8000, 0xFFFFA500);


			drawBar (280, 130,200+k,200+k, "");
//HAL_Delay(1);

  }



}


void drawVBar (int pos_x, int pos_y, float PeakVal,float AvVal,  const char * s ){

	int lastLine = 0;
	int bottomX = 0;

	GUI_SetColor(GUI_LIGHTGRAY);
	for (int i=0; i<15; i++){
			lastLine = pos_x+(i*10);
			GUI_DrawVLine(lastLine+0,pos_y, pos_y+10);
			GUI_DrawVLine(lastLine+5,pos_y, pos_y+5);
		}
		GUI_DrawVLine(lastLine+10,pos_y, pos_y+10);
		bottomX = lastLine+10;

		GUI_DrawGradientV(pos_x, pos_y-10, pos_x+AvVal, pos_y, 0xFFFF8000, 0xFFFFA500);

}




/*************************** End of file ****************************/
