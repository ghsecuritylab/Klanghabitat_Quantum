/*
 * dspTask.c
 *
 *  Created on: 07.11.2019
 *      Author: christiansager
 */

#include "main.h"
#include "RelaisControl.h"

TIM_HandleTypeDef htim6;
TIM_HandleTypeDef htim7;
DAC_HandleTypeDef hdac;

uint8_t DSProundtrip = 15; //Defines the RoundTrip time of the DSP


void dspTask(void const * argument){


	HAL_TIM_Base_Start(&htim6);
	HAL_TIM_Base_Start(&htim7);
/******************Setting all Relais to default settings**************/
	Bypass(bypass);
	VCASource(RL);
	VCAOutput(NormalOutput, MS_Deconvert_Inactive);
/**********************************************************************/

	  //******Define Oversampling ADC7606*****************//
	  HAL_GPIO_WritePin(GPIOC, OS0_Pin,GPIO_PIN_RESET);
	  HAL_GPIO_WritePin(GPIOC, OS1_Pin,GPIO_PIN_RESET);
	  HAL_GPIO_WritePin(GPIOC, OS2_Pin,GPIO_PIN_RESET);
	  //**************************************************//

	  //**********Define Range ADC7606********************//
	  HAL_GPIO_WritePin(GPIOC, RANGE_Pin,GPIO_PIN_SET); // +/- 10V Range select
	  //**************************************************//

	  //**********Default State ControlPins***************//
	  HAL_GPIO_WritePin(GPIOC, CV_A_B_Pin,GPIO_PIN_SET);
	  HAL_GPIO_WritePin(GPIOD, CS_Pin,GPIO_PIN_SET);
	  HAL_GPIO_WritePin(GPIOD, RD_Pin,GPIO_PIN_SET);
	  //**************************************************//

	  //**************RESET the ADC7606*******************//
	  HAL_GPIO_WritePin(GPIOG, RESET_Pin,GPIO_PIN_SET);
	  microDelay(1);
	  HAL_GPIO_WritePin(GPIOG, RESET_Pin,GPIO_PIN_RESET);
	  //**************************************************//



	for(;;){

		HAL_GPIO_WritePin(GPIOF, DEBUG1_Pin, GPIO_PIN_SET); //DEBUG
	    //***********************Start Measurement*********************//
	    HAL_GPIO_WritePin(GPIOC, CV_A_B_Pin,GPIO_PIN_RESET);
	    microDelay(0);
	    HAL_GPIO_WritePin(GPIOC, CV_A_B_Pin,GPIO_PIN_SET);
	    __HAL_TIM_SET_COUNTER(&htim7 , 0); //Reset Counter when Measurement was started

	    //*************************************************************//


	    //********************WAIT for new DATA to READ****************//
	    //**************************COMPUTE DATA***********************//



	    HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_12B_R, analogIN[0]);
	    HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, analogIN[1]);



	    //*******************GET NEW DATA FROM ADC*********************//
	    //***Wait Time to be sure new data is ready to grab from ADC***//
	    while (__HAL_TIM_GET_COUNTER(&htim7) < 5){
	    }
	    __HAL_TIM_SET_COUNTER(&htim7 , 0);
		HAL_GPIO_WritePin(GPIOF, DEBUG1_Pin, GPIO_PIN_RESET);//DEBUG
		HAL_GPIO_WritePin(GPIOD, DEBUG2_Pin, GPIO_PIN_SET);//DEBUG

	    //*******************Get new samples from ADC******************//
	    for (int i = 0; i<8; i++){
	    	HAL_GPIO_WritePin(GPIOD, RD_Pin,GPIO_PIN_SET);
	        HAL_GPIO_WritePin(GPIOD, CS_Pin,GPIO_PIN_SET);
	        microDelay(0);
	        HAL_GPIO_WritePin(GPIOD, RD_Pin,GPIO_PIN_RESET);
	        HAL_GPIO_WritePin(GPIOD, CS_Pin,GPIO_PIN_RESET);
	        microDelay(0); //At least something... to get Ports updated
	        analogIN[i] = GPIOE->IDR;
	    }
	    HAL_GPIO_WritePin(GPIOD, CS_Pin,GPIO_PIN_SET);
	    HAL_GPIO_WritePin(GPIOD, RD_Pin,GPIO_PIN_SET);
	    //************************************************************//
	    HAL_GPIO_WritePin(GPIOD, DEBUG2_Pin, GPIO_PIN_RESET);//DEBUG







	   //***********************RoundTripTime************************//
	    while (__HAL_TIM_GET_COUNTER(&htim7) < DSProundtrip){
	    }
	    __HAL_TIM_SET_COUNTER(&htim7, 0);
	   //*************************************************************//

	}

}






void microDelay (int time){

	 while (__HAL_TIM_GET_COUNTER(&htim6) < time){

	  }
	__HAL_TIM_SET_COUNTER(&htim6 , 0);
}
