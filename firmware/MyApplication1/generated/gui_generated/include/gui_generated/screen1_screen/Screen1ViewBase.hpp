/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1_VIEW_BASE_HPP
#define SCREEN1_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/imageContainer.hpp>

#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/textContainer.hpp>
#include <gui/containers/textCenterContainer.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>
class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}

    virtual void setupScreen();

    virtual void scrollListUpdateItem(imageContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Screen1
    }

    virtual void scrollWheelUpdateItem(textContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Screen1
    }

    virtual void scrollWheelUpdateCenterItem(textCenterContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Screen1
    }

    /*
     * Custom Action Handlers
     */
    virtual void scrollListSelected()
    {
        // Override and implement this function in Screen1View
    }

    virtual void scrollWheelSelected()
    {
        // Override and implement this function in Screen1View
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box boxBackground;
    touchgfx::Image background;
    touchgfx::Image scrollBg;
    touchgfx::ScrollList scrollList;
    touchgfx::DrawableListItems<imageContainer, 8> scrollListListItems;

    touchgfx::ScrollWheelWithSelectionStyle scrollWheel;
    touchgfx::DrawableListItems<textContainer, 6> scrollWheelListItems;
    touchgfx::DrawableListItems<textCenterContainer, 2> scrollWheelSelectedListItems;

    touchgfx::Image selectedIcon;
    touchgfx::TextAreaWithOneWildcard selectedVal;
    touchgfx::TextArea selectText;
    touchgfx::Image scrollWheelFrame;
    touchgfx::TextArea changeScrollListText;
    touchgfx::Image mask;
    touchgfx::RadioButton radioButtonScrollWheel;
    touchgfx::RadioButton radioButtonScrollList;
    touchgfx::TextArea changeScrollWheelText;
    touchgfx::RadioButtonGroup<2> radioButtonGroup;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SELECTEDVAL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar selectedValBuffer[SELECTEDVAL_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> radioButtonSelectedCallback;
    touchgfx::Callback<Screen1ViewBase, DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

};

#endif // SCREEN1_VIEW_BASE_HPP
