#platform "Gen4-uLCD-70DCT-CLB"


// Program Skeleton 1.3 generated 2019-03-09 19:05:29
                    #inherit "PrintDisk.inc"
#inherit "4DGL_16bitColours.fnc"

#inherit "VisualConst.inc"

#inherit "Graviton_Display_V2_0Const.inc"

func main()
var hstrings ; // Handle to access uSD strings, uncomment if required
var hFont1 ;   // Handle to access uSD fonts, uncomment if required and change n to font number
 var hFont2 ;
//  Uncomment the following if uSD images, fonts or strings used.
    putstr("Mounting...\n");
    if (!(file_Mount()))
        while(!(file_Mount()))
            putstr("Drive not mounted...");
            pause(200);
            gfx_Cls();
            pause(200);
        wend
    endif
    gfx_Cls();
//    gfx_TransparentColour(0x0020);    // uncomment if transparency required
//    gfx_Transparency(ON);             // uncomment if transparency required

    hFont1 := file_LoadImageControl("GRAVIT~3.dan", "GRAVIT~3.gcn", 1); // Open handle to access uSD fonts, uncomment if required and change n to font number dropping a and c if > 9


    hFont2 := file_LoadImageControl("GRAVIT~3.dan", "GRAVIT~3.gcn", 1);
    hstrings := file_Open("GRAVIT~3.txf", 'r') ; // Open handle to access uSD strings, uncomment if required
    hndl := file_LoadImageControl("GRAVIT~3.dat", "GRAVIT~3.gci", 1);

        txt_Set(TEXT_WIDTH, 3);
        txt_Set(TEXT_HEIGHT, 3);
        txt_FGcolour(WHITE) ;
        txt_BGcolour(BLACK) ;
        putstr('GAIN');
        gfx_MoveTo(200, 200) ;

    gfx_ScreenMode(LANDSCAPE) ; // change manually if orientation change
    var i:=0;
    var t:=0;
    var step:=1;
    var width := 100;
    var height := 10;
    var width2:= 10;
    var height2:= 50;



    var SquareX1[23] :=     [100,95,90,85,80,75,70,65,60,55,50,45,50,55,60,65,70,75,80,85,90,95,100];

    var SquareY[23] :=     [460,440,420,400,380,360,340,320,300,280,260,240,220,200,180,160,140,120,100,80,60,40,20];

    var SquareX2[23] :=    [695,700,705,710,715,720,725,730,735,740,745,750,745,740,735,730,725,720,715,710,705,700,695];


    //var SquareX3[23] :=    [180,200,220,240,260,280,300,320,340,360,380,400,420,440,460,480,500,520,540,560,580,600,620];

    //var SquareY3[23] :=    [180,175,170,165,160,155,150,145,140,135,130,125,130,135,140,145,150,155,160,165,170,175,180];

    //var SquareY4[23] :=    [300,305,310,315,320,325,330,335,340,345,350,355,350,345,340,335,330,325,320,315,310,305,300];


    repeat
    square (width,height,SquareX1[i],SquareY[i],GRAY);
    square (width,height,SquareX2[i],SquareY[i],GRAY);
    //square (width2,height2,SquareX3[i],SquareY3[i],GRAY);
    //square (width2,height2,SquareX3[i],SquareY4[i],GRAY);

    i++;
    until (i==23);
    i:=0;





    repeat

    square (width,height,SquareX1[i],SquareY[i], WHITE);
    square (width,height,SquareX2[i],SquareY[i], WHITE);
    //square (width2,height2,SquareX3[i],SquareY3[i], WHITE);
    //square (width2,height2,SquareX3[i],SquareY4[i], WHITE);
    if(i != 22)
    square (width,height,SquareX1[i+1],SquareY[i+1],GRAY);
    square (width,height,SquareX2[i+1],SquareY[i+1],GRAY);
    //square (width2,height2,SquareX3[i+1],SquareY3[i+1],GRAY);
    //square (width2,height2,SquareX3[i+1],SquareY4[i+1],GRAY);
    endif


    if (i == 0 ) step:=1;
    if (i == 22) step:=-1;
    i+=step;

    if (step == 1)
    pause(40);
    else
    pause(40);
    endif

    forever

endfunc



func square (var width, var height, var CenterX, var CenterY, var color)

    var StartX := 0;
    var StartY := 0;
    StartX := CenterX - width/2;
    StartY := CenterY - height/2;

    repeat
    gfx_Line(StartX,StartY , StartX+width, StartY, color);
    StartY++;
    until (StartY  == CenterY + height/2);

return 0;
endfunc


